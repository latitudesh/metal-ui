import{useRef,useState,useEffect}from"react";import{createPortal}from"react-dom";import PropTypes from"prop-types";import Box from"../Box/index.js";import{useKeyPressEvent}from"react-use";import{jsx}from"@emotion/react";function _EMOTION_STRINGIFIED_CSS_ERROR__(){return"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."}var _ref="production"===process.env.NODE_ENV?{name:"10832i9",styles:"--tw-text-opacity:1;color:rgba(136, 136, 136, var(--tw-text-opacity))"}:{name:"1kob36r-XIcon",styles:"--tw-text-opacity:1;color:rgba(136, 136, 136, var(--tw-text-opacity));label:XIcon;",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};function XIcon(){return jsx("svg",{fill:"none",css:_ref,stroke:"currentColor",viewBox:"0 0 24 24",width:"16px",height:"16px"},jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M6 18L18 6M6 6l12 12"}))}const SidesheetContent=({id:I,children:g})=>{if("undefined"==typeof window)return null;let C=useRef(document.getElementById(I)||document.createElement("div"));return useEffect(()=>(document.getElementById(I)||(C.current.id=I,document.body.appendChild(C.current)),()=>{C.current.parentElement&&C.current.parentElement.removeChild(C.current)}),[I]),createPortal(g,C.current)};var _ref2="production"===process.env.NODE_ENV?{name:"195qpe4",styles:"position:fixed;z-index:50;min-width:0px;--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity));transition-duration:300ms;transition-delay:200ms;height:100%;display:flex;flex-direction:column;--tw-shadow:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);margin:0.5rem;border-radius:5px"}:{name:"wzzfju-Sidesheet",styles:"position:fixed;z-index:50;min-width:0px;--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity));transition-duration:300ms;transition-delay:200ms;height:100%;display:flex;flex-direction:column;--tw-shadow:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);margin:0.5rem;border-radius:5px;label:Sidesheet;",toString:_EMOTION_STRINGIFIED_CSS_ERROR__},_ref3="production"===process.env.NODE_ENV?{name:"iasdbu",styles:"position:relative;border-bottom-width:1px;--tw-border-opacity:1;border-color:rgba(234, 234, 234, var(--tw-border-opacity));border-radius:5px;border-bottom-left-radius:0px;border-bottom-right-radius:0px"}:{name:"3d78pf-Sidesheet",styles:"position:relative;border-bottom-width:1px;--tw-border-opacity:1;border-color:rgba(234, 234, 234, var(--tw-border-opacity));border-radius:5px;border-bottom-left-radius:0px;border-bottom-right-radius:0px;label:Sidesheet;",toString:_EMOTION_STRINGIFIED_CSS_ERROR__},_ref4="production"===process.env.NODE_ENV?{name:"15eipi2",styles:"--tw-text-opacity:1;color:rgba(0, 0, 0, var(--tw-text-opacity));flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;line-height:1.5rem"}:{name:"fy6yfu-Sidesheet",styles:"--tw-text-opacity:1;color:rgba(0, 0, 0, var(--tw-text-opacity));flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;line-height:1.5rem;label:Sidesheet;",toString:_EMOTION_STRINGIFIED_CSS_ERROR__},_ref5="production"===process.env.NODE_ENV?{name:"ozd7xs",styles:"flex-shrink:0"}:{name:"1dgwzgt-Sidesheet",styles:"flex-shrink:0;label:Sidesheet;",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Sidesheet=({title:I,children:g,action:C,content:A,width:l=400,onClose:b,isShown:c=!1})=>{var i=useRef(),e=useRef();const[t,G]=useState(!1),[d,o]=useState(!1),X=(useEffect(()=>{let I;return I=c?(G(!0),setTimeout(()=>o(!0),100)):(o(!1),setTimeout(()=>G(!1),300)),()=>clearTimeout(I)},[c]),()=>{let I;return t&&d&&(b(),o(!1),I=setTimeout(()=>G(!1),300)),()=>clearTimeout(I)});return useKeyPressEvent("Escape",X),jsx("div",{ref:i},g,t&&jsx(SidesheetContent,{id:"sidesheet"},jsx("div",{onClick:t?()=>X():null,css:["transition-property:background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:200ms;position:fixed;z-index:50;top:0px;right:0px;bottom:0px;left:0px;opacity:0.25;transition-delay:100ms;",d&&{"--tw-bg-opacity":"1",backgroundColor:"rgba(17, 17, 17, var(--tw-bg-opacity))"},!d&&{backgroundColor:"rgba(0, 0, 0, 0)"},"production"===process.env.NODE_ENV?"":";label:Sidesheet;","production"===process.env.NODE_ENV?"":"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlHYyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3JlYXRlUG9ydGFsIH0gZnJvbSBcInJlYWN0LWRvbVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IEJveCBmcm9tIFwiLi4vQm94XCI7XG5pbXBvcnQgeyB1c2VLZXlQcmVzc0V2ZW50IH0gZnJvbSBcInJlYWN0LXVzZVwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0d2luLm1hY3JvXCI7XG5cbmZ1bmN0aW9uIFhJY29uKCkge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIGZpbGw9XCJub25lXCJcbiAgICAgIHR3PVwidGV4dC1hY2NlbnQtZm91clwiXG4gICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICB3aWR0aD1cIjE2cHhcIlxuICAgICAgaGVpZ2h0PVwiMTZweFwiXG4gICAgPlxuICAgICAgPHBhdGhcbiAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgIHN0cm9rZVdpZHRoPVwiMlwiXG4gICAgICAgIGQ9XCJNNiAxOEwxOCA2TTYgNmwxMiAxMlwiXG4gICAgICA+PC9wYXRoPlxuICAgIDwvc3ZnPlxuICApO1xufVxuXG5jb25zdCBTaWRlc2hlZXRDb250ZW50ID0gKHsgaWQsIGNoaWxkcmVuIH0pID0+IHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHJldHVybiBudWxsO1xuXG4gIGxldCBlbGVtZW50ID0gdXNlUmVmKFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSkge1xuICAgICAgZWxlbWVudC5jdXJyZW50LmlkID0gaWQ7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQuY3VycmVudCk7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoZWxlbWVudC5jdXJyZW50LnBhcmVudEVsZW1lbnQpIHtcbiAgICAgICAgZWxlbWVudC5jdXJyZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudC5jdXJyZW50KTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbaWRdKTtcblxuICByZXR1cm4gY3JlYXRlUG9ydGFsKGNoaWxkcmVuLCBlbGVtZW50LmN1cnJlbnQpO1xufTtcblxuY29uc3QgU2lkZXNoZWV0ID0gKHtcbiAgdGl0bGUsXG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGFjdGlvbixcbiAgY29udGVudCxcbiAgd2lkdGggPSA0MDAsXG4gIG9uQ2xvc2UsXG4gIGlzU2hvd24gPSBmYWxzZSxcbn0pID0+IHtcbiAgY29uc3Qgc2lkZVNoZWV0ID0gdXNlUmVmKCk7XG4gIGNvbnN0IHBvcnRhbCA9IHVzZVJlZigpO1xuICBjb25zdCBbaXNPcGVuZWQsIHNldElzT3BlbmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3RyYW5zaXRpb24sIHNldFRyYW5zaXRpb25dID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IHRyYW5zaXRpb25UaW1lb3V0O1xuXG4gICAgaWYgKCFpc1Nob3duKSB7XG4gICAgICBzZXRUcmFuc2l0aW9uKGZhbHNlKTtcbiAgICAgIHRyYW5zaXRpb25UaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiBzZXRJc09wZW5lZChmYWxzZSksIDMwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldElzT3BlbmVkKHRydWUpO1xuICAgICAgdHJhbnNpdGlvblRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHNldFRyYW5zaXRpb24odHJ1ZSksIDEwMCk7XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dCh0cmFuc2l0aW9uVGltZW91dCk7XG4gIH0sIFtpc1Nob3duXSk7XG5cbiAgY29uc3QgY2xvc2VUcmFuc2l0aW9uID0gKCkgPT4ge1xuICAgIGxldCB0aW1lb3V0XG4gICAgaWYgKGlzT3BlbmVkICYmIHRyYW5zaXRpb24pIHtcbiAgICAgIG9uQ2xvc2UoKTtcbiAgICAgIHNldFRyYW5zaXRpb24oZmFsc2UpO1xuICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0SXNPcGVuZWQoZmFsc2UpLCAzMDApO1xuICAgIH1cbiAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXQpXG4gIH07XG5cbiAgdXNlS2V5UHJlc3NFdmVudChcIkVzY2FwZVwiLCBjbG9zZVRyYW5zaXRpb24pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e3NpZGVTaGVldH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgICB7aXNPcGVuZWQgJiYgKFxuICAgICAgICA8U2lkZXNoZWV0Q29udGVudCBpZD1cInNpZGVzaGVldFwiPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBvbkNsaWNrPXtpc09wZW5lZCA/ICAoKSA9PiBjbG9zZVRyYW5zaXRpb24oKSA6IG51bGx9XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHR3YGZpeGVkIHotNTAgaW5zZXQtMCBvcGFjaXR5LTI1IGR1cmF0aW9uLTIwMCBkZWxheS0xMDAgdHJhbnNpdGlvbmAsXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbiAmJiB0d2BiZy1hY2NlbnQtZWlnaHRgLFxuICAgICAgICAgICAgICAgICF0cmFuc2l0aW9uICYmIHR3YGJnLXRyYW5zcGFyZW50YCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHJlZj17cG9ydGFsfVxuICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IFwidHJhbnNmb3JtIC4ycyBjdWJpYy1iZXppZXIoLjMsMCwwLDEpXCIsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2l0aW9uXG4gICAgICAgICAgICAgICAgICA/IGB0cmFuc2xhdGVYKDApYFxuICAgICAgICAgICAgICAgICAgOiBcInRyYW5zbGF0ZVgoMTAwJSlcIixcbiAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgICAgIHJpZ2h0OjAsXG4gICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgICAgIG1heFdpZHRoOiBcImNhbGMoMTAwdncgLSAyMHB4KVwiLFxuICAgICAgICAgICAgICAgIGhlaWdodDogXCJjYWxjKDEwMCUgLSAyMHB4KVwiLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICB0dz1cImZpeGVkIHotNTAgbWluLXctMCBiZy13aGl0ZSBkdXJhdGlvbi0zMDAgZGVsYXktMjAwIGgtZnVsbCBmbGV4IGZsZXgtY29sIHNoYWRvdy14bCBtLTIgcm91bmRlZFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgICAgICBmbGV4XG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgdHc9XCJyZWxhdGl2ZSBib3JkZXItYiBib3JkZXItYm9yZGVyIHJvdW5kZWQgcm91bmRlZC1iLW5vbmVcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiB0dz1cInRleHQtZm9yZWdyb3VuZCBmbGV4LWF1dG8gdHJ1bmNhdGUgbGVhZGluZy02XCI+XG4gICAgICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgZmxleFxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yPVwidHJhbnNwYXJlbnRcIlxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3Vyc29yLXBvaW50ZXIgYmctdHJhbnNwYXJlbnRcIlxuICAgICAgICAgICAgICAgICAgbm9QYWRkaW5nXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoKSA9PiBjbG9zZVRyYW5zaXRpb24oKX0+XG4gICAgICAgICAgICAgICAgICAgIDxYSWNvbiAvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgZmxleFxuICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2xcIlxuICAgICAgICAgICAgICAgIG92ZXJmbG93PXtcIm92ZXJmbG93LXktYXV0b1wifVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNpZGVzaGVldC1jb250ZW50IHJlbGF0aXZlIGZsZXgtMSByb3VuZGVkIHB4LTMgcHktM1wiXG4gICAgICAgICAgICAgICAgbm9QYWRkaW5nXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgICBub1BhZGRpbmdcbiAgICAgICAgICAgICAgICAgIGZsZXhcbiAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2xcIlxuICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c9e1wib3ZlcmZsb3cteS1hdXRvXCJ9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJvdmVyZmxvdy12aXNpYmxlIHB4LTMgcHktM1wiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICA8ZGl2IHR3PVwiZmxleC1zaHJpbmstMFwiPntjb250ZW50fTwvZGl2PlxuICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAge2FjdGlvbiAmJiAoXG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgZmxleFxuICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJldmVubHlcIlxuICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzaWRlc2hlZXQtYWN0aW9uIGgtMTYgYm9yZGVyLXQgYm9yZGVyLWJvcmRlciByZWxhdGl2ZSBmbGV4LWluaXRpYWwgcm91bmRlZCByb3VuZGVkLXQtbm9uZVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge2FjdGlvbn1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PiBcbiAgICAgICAgPC9TaWRlc2hlZXRDb250ZW50PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cblNpZGVzaGVldC5wcm9wVHlwZXMgPSB7XG4gIGNvbnRlbnQ6IFByb3BUeXBlcy5lbGVtZW50LFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmVsZW1lbnQsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgYWN0aW9uOiBQcm9wVHlwZXMuZWxlbWVudCxcbiAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGlzU2hvd246IFByb3BUeXBlcy5ib29sLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNpZGVzaGVldDtcbiJdfQ== */","production"===process.env.NODE_ENV?"":";label:Sidesheet;","production"===process.env.NODE_ENV?"":"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlHYyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3JlYXRlUG9ydGFsIH0gZnJvbSBcInJlYWN0LWRvbVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IEJveCBmcm9tIFwiLi4vQm94XCI7XG5pbXBvcnQgeyB1c2VLZXlQcmVzc0V2ZW50IH0gZnJvbSBcInJlYWN0LXVzZVwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0d2luLm1hY3JvXCI7XG5cbmZ1bmN0aW9uIFhJY29uKCkge1xuICByZXR1cm4gKFxuICAgIDxzdmdcbiAgICAgIGZpbGw9XCJub25lXCJcbiAgICAgIHR3PVwidGV4dC1hY2NlbnQtZm91clwiXG4gICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICB3aWR0aD1cIjE2cHhcIlxuICAgICAgaGVpZ2h0PVwiMTZweFwiXG4gICAgPlxuICAgICAgPHBhdGhcbiAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgIHN0cm9rZVdpZHRoPVwiMlwiXG4gICAgICAgIGQ9XCJNNiAxOEwxOCA2TTYgNmwxMiAxMlwiXG4gICAgICA+PC9wYXRoPlxuICAgIDwvc3ZnPlxuICApO1xufVxuXG5jb25zdCBTaWRlc2hlZXRDb250ZW50ID0gKHsgaWQsIGNoaWxkcmVuIH0pID0+IHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHJldHVybiBudWxsO1xuXG4gIGxldCBlbGVtZW50ID0gdXNlUmVmKFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSkge1xuICAgICAgZWxlbWVudC5jdXJyZW50LmlkID0gaWQ7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQuY3VycmVudCk7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoZWxlbWVudC5jdXJyZW50LnBhcmVudEVsZW1lbnQpIHtcbiAgICAgICAgZWxlbWVudC5jdXJyZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudC5jdXJyZW50KTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbaWRdKTtcblxuICByZXR1cm4gY3JlYXRlUG9ydGFsKGNoaWxkcmVuLCBlbGVtZW50LmN1cnJlbnQpO1xufTtcblxuY29uc3QgU2lkZXNoZWV0ID0gKHtcbiAgdGl0bGUsXG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGFjdGlvbixcbiAgY29udGVudCxcbiAgd2lkdGggPSA0MDAsXG4gIG9uQ2xvc2UsXG4gIGlzU2hvd24gPSBmYWxzZSxcbn0pID0+IHtcbiAgY29uc3Qgc2lkZVNoZWV0ID0gdXNlUmVmKCk7XG4gIGNvbnN0IHBvcnRhbCA9IHVzZVJlZigpO1xuICBjb25zdCBbaXNPcGVuZWQsIHNldElzT3BlbmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3RyYW5zaXRpb24sIHNldFRyYW5zaXRpb25dID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IHRyYW5zaXRpb25UaW1lb3V0O1xuXG4gICAgaWYgKCFpc1Nob3duKSB7XG4gICAgICBzZXRUcmFuc2l0aW9uKGZhbHNlKTtcbiAgICAgIHRyYW5zaXRpb25UaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiBzZXRJc09wZW5lZChmYWxzZSksIDMwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldElzT3BlbmVkKHRydWUpO1xuICAgICAgdHJhbnNpdGlvblRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHNldFRyYW5zaXRpb24odHJ1ZSksIDEwMCk7XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dCh0cmFuc2l0aW9uVGltZW91dCk7XG4gIH0sIFtpc1Nob3duXSk7XG5cbiAgY29uc3QgY2xvc2VUcmFuc2l0aW9uID0gKCkgPT4ge1xuICAgIGxldCB0aW1lb3V0XG4gICAgaWYgKGlzT3BlbmVkICYmIHRyYW5zaXRpb24pIHtcbiAgICAgIG9uQ2xvc2UoKTtcbiAgICAgIHNldFRyYW5zaXRpb24oZmFsc2UpO1xuICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0SXNPcGVuZWQoZmFsc2UpLCAzMDApO1xuICAgIH1cbiAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXQpXG4gIH07XG5cbiAgdXNlS2V5UHJlc3NFdmVudChcIkVzY2FwZVwiLCBjbG9zZVRyYW5zaXRpb24pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e3NpZGVTaGVldH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgICB7aXNPcGVuZWQgJiYgKFxuICAgICAgICA8U2lkZXNoZWV0Q29udGVudCBpZD1cInNpZGVzaGVldFwiPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBvbkNsaWNrPXtpc09wZW5lZCA/ICAoKSA9PiBjbG9zZVRyYW5zaXRpb24oKSA6IG51bGx9XG4gICAgICAgICAgICAgIGNzcz17W1xuICAgICAgICAgICAgICAgIHR3YGZpeGVkIHotNTAgaW5zZXQtMCBvcGFjaXR5LTI1IGR1cmF0aW9uLTIwMCBkZWxheS0xMDAgdHJhbnNpdGlvbmAsXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbiAmJiB0d2BiZy1hY2NlbnQtZWlnaHRgLFxuICAgICAgICAgICAgICAgICF0cmFuc2l0aW9uICYmIHR3YGJnLXRyYW5zcGFyZW50YCxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHJlZj17cG9ydGFsfVxuICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IFwidHJhbnNmb3JtIC4ycyBjdWJpYy1iZXppZXIoLjMsMCwwLDEpXCIsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2l0aW9uXG4gICAgICAgICAgICAgICAgICA/IGB0cmFuc2xhdGVYKDApYFxuICAgICAgICAgICAgICAgICAgOiBcInRyYW5zbGF0ZVgoMTAwJSlcIixcbiAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgICAgIHJpZ2h0OjAsXG4gICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgICAgIG1heFdpZHRoOiBcImNhbGMoMTAwdncgLSAyMHB4KVwiLFxuICAgICAgICAgICAgICAgIGhlaWdodDogXCJjYWxjKDEwMCUgLSAyMHB4KVwiLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICB0dz1cImZpeGVkIHotNTAgbWluLXctMCBiZy13aGl0ZSBkdXJhdGlvbi0zMDAgZGVsYXktMjAwIGgtZnVsbCBmbGV4IGZsZXgtY29sIHNoYWRvdy14bCBtLTIgcm91bmRlZFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgICAgICBmbGV4XG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgdHc9XCJyZWxhdGl2ZSBib3JkZXItYiBib3JkZXItYm9yZGVyIHJvdW5kZWQgcm91bmRlZC1iLW5vbmVcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiB0dz1cInRleHQtZm9yZWdyb3VuZCBmbGV4LWF1dG8gdHJ1bmNhdGUgbGVhZGluZy02XCI+XG4gICAgICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgZmxleFxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yPVwidHJhbnNwYXJlbnRcIlxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3Vyc29yLXBvaW50ZXIgYmctdHJhbnNwYXJlbnRcIlxuICAgICAgICAgICAgICAgICAgbm9QYWRkaW5nXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoKSA9PiBjbG9zZVRyYW5zaXRpb24oKX0+XG4gICAgICAgICAgICAgICAgICAgIDxYSWNvbiAvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgZmxleFxuICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2xcIlxuICAgICAgICAgICAgICAgIG92ZXJmbG93PXtcIm92ZXJmbG93LXktYXV0b1wifVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNpZGVzaGVldC1jb250ZW50IHJlbGF0aXZlIGZsZXgtMSByb3VuZGVkIHB4LTMgcHktM1wiXG4gICAgICAgICAgICAgICAgbm9QYWRkaW5nXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgICBub1BhZGRpbmdcbiAgICAgICAgICAgICAgICAgIGZsZXhcbiAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2xcIlxuICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c9e1wib3ZlcmZsb3cteS1hdXRvXCJ9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJvdmVyZmxvdy12aXNpYmxlIHB4LTMgcHktM1wiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICA8ZGl2IHR3PVwiZmxleC1zaHJpbmstMFwiPntjb250ZW50fTwvZGl2PlxuICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAge2FjdGlvbiAmJiAoXG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgZmxleFxuICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJldmVubHlcIlxuICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzaWRlc2hlZXQtYWN0aW9uIGgtMTYgYm9yZGVyLXQgYm9yZGVyLWJvcmRlciByZWxhdGl2ZSBmbGV4LWluaXRpYWwgcm91bmRlZCByb3VuZGVkLXQtbm9uZVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge2FjdGlvbn1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PiBcbiAgICAgICAgPC9TaWRlc2hlZXRDb250ZW50PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cblNpZGVzaGVldC5wcm9wVHlwZXMgPSB7XG4gIGNvbnRlbnQ6IFByb3BUeXBlcy5lbGVtZW50LFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmVsZW1lbnQsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgYWN0aW9uOiBQcm9wVHlwZXMuZWxlbWVudCxcbiAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGlzU2hvd246IFByb3BUeXBlcy5ib29sLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNpZGVzaGVldDtcbiJdfQ== */"]}),jsx("div",{ref:e,style:{transition:"transform .2s cubic-bezier(.3,0,0,1)",transform:d?"translateX(0)":"translateX(100%)",top:0,bottom:0,right:0,width:l,maxWidth:"calc(100vw - 20px)",height:"calc(100% - 20px)"},css:_ref2},jsx(Box,{flex:!0,alignItems:"center",css:_ref3},jsx("div",{css:_ref4},I),jsx(Box,{flex:!0,backgroundColor:"transparent",className:"cursor-pointer bg-transparent",noPadding:!0},jsx("div",{onClick:()=>X()},jsx(XIcon,null)))),jsx(Box,{flex:!0,flexDirection:"col",overflow:"overflow-y-auto",className:"sidesheet-content relative flex-1 rounded px-3 py-3",noPadding:!0},jsx(Box,{noPadding:!0,flex:!0,flexDirection:"col",overflow:"overflow-y-auto",className:"overflow-visible px-3 py-3"},jsx("div",{css:_ref5},A))),C&&jsx(Box,{flex:!0,justifyContent:"evenly",alignItems:"center",className:"sidesheet-action h-16 border-t border-border relative flex-initial rounded rounded-t-none"},C))))};Sidesheet.propTypes={content:PropTypes.element,children:PropTypes.element,className:PropTypes.string,width:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),action:PropTypes.element,onClose:PropTypes.func,isShown:PropTypes.bool,title:PropTypes.string};export{Sidesheet as default};
