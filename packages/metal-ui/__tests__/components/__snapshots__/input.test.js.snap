// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshots/Components/Input Renders input 1`] = `
.emotion-0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1 {
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  display: block;
  width: 100%;
  padding: 0.5rem;
  border-width: 1px;
  font-family: inherit;
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);
  border-radius: 5px;
  --tw-border-opacity: 1;
  border-color: rgba(234, 234, 234, var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
  height: 2.25rem;
  line-height: 1.25rem;
  font-size: 0.875rem;
}

.emotion-1:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);
}

@media (min-width: 640px) {
  .emotion-1 {
    line-height: 1.25rem;
  }
}

.emotion-1:hover,
.emotion-1:focus {
  --tw-border-opacity: 1;
  border-color: rgba(102, 102, 102, var(--tw-border-opacity));
}

.emotion-1::-webkit-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-1::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-1:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-1::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

<div>
  <div
    className="emotion-0"
  >
    <input
      aria-invalid={false}
      aria-required={false}
      className="emotion-1"
      onChange={[Function]}
      style={Object {}}
    />
  </div>
</div>
`;

exports[`Snapshots/Components/Input Renders input with suffix 1`] = `
.emotion-0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-1 {
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  display: block;
  width: 100%;
  padding: 0.5rem;
  border-width: 1px;
  font-family: inherit;
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
  --tw-border-opacity: 1;
  border-color: rgba(234, 234, 234, var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
  height: 2.25rem;
  line-height: 1.25rem;
  font-size: 0.875rem;
}

.emotion-1:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);
}

@media (min-width: 640px) {
  .emotion-1 {
    line-height: 1.25rem;
  }
}

.emotion-1:hover,
.emotion-1:focus {
  --tw-border-opacity: 1;
  border-color: rgba(102, 102, 102, var(--tw-border-opacity));
}

.emotion-1::-webkit-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-1::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-1:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-1::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-placeholder-opacity));
}

.emotion-2 {
  --tw-bg-opacity: 1;
  background-color: rgba(234, 234, 234, var(--tw-bg-opacity));
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-text-opacity));
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
}

<div>
  <div
    className="emotion-0"
  >
    <input
      aria-invalid={false}
      aria-required={false}
      className="emotion-1"
      max={100}
      min={0}
      onChange={[Function]}
      step={10}
      style={Object {}}
      type="number"
    />
    <div
      className="emotion-2"
    >
      TB
    </div>
  </div>
</div>
`;
